@mixin ifmobile {
  @media only screen and (max-width: 768px) {
    @content;
  }
}

@mixin ifmobileL {
  @media only screen and (max-width: 768px) and (orientation: landscape) {
    @content;
  }
}

@mixin ifdesktop {
  @media only screen and (min-width: 769px) {
    @content;
  }
}

@mixin iftablet {
  @media only screen and (min-width: 769px) and (max-width: 1024px) {
    @content;
  }
}

@mixin respondH($media) {
  @media only screen and (min-height: $media) {
    @content;
  }
}

@mixin respondHFrom($media) {
  @media only screen and (max-height: $media) {
    @content;
  }
}

@mixin respond($media) {
  @media only screen and (max-width: $media) {
    @content;
  }
}

@mixin respondFrom($media) {
  @media only screen and (min-width: $media) {
    @content;
  }
}
@mixin detectIe() {
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content;
  }
}

@mixin ifparent($selector) {
  #{$selector} & {
    @content;
  }
}

@mixin keyframe($animation_name) {
  @-webkit-keyframes #{$animation_name} {
    @content;
  }

  @-moz-keyframes #{$animation_name} {
    @content;
  }

  @keyframes #{$animation_name} {
    @content;
  }
}

@mixin animation($delay, $duration, $animation, $count: infinite, $ease: ease) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-iteration-count: $count;
  -webkit-animation-timing-function: $ease;

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-iteration-count: $count;
  -moz-animation-timing-function: $ease;

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-iteration-count: $count;
  animation-timing-function: $ease;
}

@mixin placeholder-color($color) {
  &::-webkit-input-placeholder {
    color: $color;
  }
  &::-moz-placeholder {
    color: $color;
  }
  &:-moz-placeholder {
    color: $color;
  }
  &:-ms-input-placeholder {
    color: $color;
  }
}

@mixin border($color: black, $width: 1px, $style: solid) {
  border: $width $style $color;
}

@mixin transition($prop: all, $time: 0.3s, $easing: linear, $delay: 0s) {
  $transition: ();
  @for $i from 1 through length($prop) {
    @for $j from 0 to (length($prop)) - (length($time)) {
      $time: join($time, nth($time, -1));
    }
    @for $j from 0 to (length($prop)) - (length($easing)) {
      $easing: join($easing, nth($easing, -1));
    }
    @for $j from 0 to (length($prop)) - (length($delay)) {
      $delay: join($delay, nth($delay, -1));
    }

    $transition: append(
      $transition,
      (nth($prop, $i) nth($time, $i) nth($easing, $i) nth($delay, $i)),
      $separator: comma
    );
  }
  transition: $transition;
}
